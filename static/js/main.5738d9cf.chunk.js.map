{"version":3,"sources":["components/pokemon/image/Image.js","components/types/type/Type.js","components/params.js","components/pokemon/move/Move.js","components/pokemon/Pokemon.js","components/stats/stat/Stat.js","components/stats/Stats.js","components/types/type_relations.js","components/types/Types.js","components/AppContainer.js","components/header/Header.js","App.js","serviceWorker.js","index.js"],"names":["PokemonImage","props","pokemonName","name","replace","react_default","a","createElement","alt","className","src","Type","type","toUpperCase","API","Move","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedMove","handleChange","bind","assertThisInitialized","oldType","newType","old","new","event","_this2","persist","target","setAttribute","setTimeout","removeAttribute","damage_class","value","setState","moveTypesCallback","moveTypesToSendToParent","API_ROUTE","fetch","then","res","json","data","catch","console","log","moves","typeClass","onChange","key","map","move","titleize","Component","Pokemon","moveTypes","newMoveTypes","selectedMovesTypes","filter","includes","push","num","pokemons","selectedPokemon","pokemonTypes","results","adding","addition","HP","stats","base_stat","ATK","DEF","SPA","SPD","SPE","_this3","statsCallback","statsToSendToParent","pokemonTypesCallback","types","forEach","tmpPokemon","finalMoves","species","evolves_from_species","concat","index","self","findIndex","m","sort","b","slot","pokemon","Type_Type","Move_Move","Stat","statNumber","stat_value","style","width","backgroundColor","role","title","Stats","values","nbPokemon","selectedPokemonNumber","keys","Stat_Stat","typesList","typesStrengths","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","typesWeaknesses","typesResists","Types","lastMovesTypes","weaknesses","TypeRelations","element","strengths","getInitialWeaknesses","pokemonsTypes","firstTypeWeaknesses","secondTypeWeaknesses","firstTypeResists","secondTypeResists","weakness","Set","toConsumableArray","getInitialStrengths","alreadyDoneTypes","movesTypes","pokemonMoveTypes","strength","calcWeaknesses","calcStrengths","AppContainer","dataFromChild","newTypes","newSelectedPokemonNb","newValues","Pokemon_Pokemon","Stats_Stats","Types_Types","Header","href","App","Header_Header","AppContainer_AppContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5738d9cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Image.css'\r\n\r\nexport default function PokemonImage(props) {\r\n    let pokemonName = props.name.replace(/-/g,'');\r\n    if(pokemonName === \"\")\r\n        return <img alt={pokemonName} className=\"pokemon-image\" src='./assets/sprites/missingno.gif'/>\r\n    else\r\n        return <img alt={pokemonName} className=\"pokemon-image\" src={'./assets/sprites/' + pokemonName + '.gif'}/>\r\n}","import React from 'react';\r\nimport './Type.css';\r\n\r\nexport default function Type(props) {\r\n    return (\r\n        <div className=\"type\">\r\n            <div className={props.type}>{props.type.toUpperCase()}</div>\r\n        </div>\r\n    );\r\n}","export const API = \"https://pokeapi.co/api/v2/\";","import React, { Component } from 'react';\r\nimport titleize from 'titleize';\r\nimport './Move.css';\r\nimport { API } from '../../params'\r\n\r\nexport default class Move extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedMove: null\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    // Returns the object to send to the parent for changing attack type\r\n    moveTypesToSendToParent(oldType,newType) {\r\n        let dataFromChild = {\r\n            old: oldType,\r\n            new: newType\r\n        }\r\n        return dataFromChild;\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Prevent from spamming API calls\r\n        event.persist();\r\n        event.target.setAttribute('disabled', 'disabled');\r\n        setTimeout(() => {\r\n            event.target.removeAttribute('disabled');\r\n        }, 500);\r\n        let oldType = null;\r\n        let newType = null;\r\n        // Remove types from previous move in parent component\r\n        if (this.state.selectedMove && this.state.selectedMove.damage_class.name !== \"status\") {\r\n            oldType = this.state.selectedMove.type.name;\r\n        }\r\n        if (event.target.value === \"\") {\r\n            this.setState({ selectedMove: null });\r\n            this.props.moveTypesCallback(this.moveTypesToSendToParent(oldType,newType));\r\n        }\r\n        else {\r\n            // Fetch data of the move\r\n            const API_ROUTE = \"move/\" + event.target.value;\r\n            fetch(API + API_ROUTE)\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    this.setState({ selectedMove: data });\r\n                    if(data.damage_class.name !== \"status\") {\r\n                        newType = data.type.name;\r\n                    }\r\n                    this.props.moveTypesCallback(this.moveTypesToSendToParent(oldType,newType));\r\n                })\r\n                .catch(console.log);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const moves = this.props.moves;\r\n        const selectedMove = this.state.selectedMove;\r\n        const typeClass = (selectedMove)?(\"select-\"+selectedMove.type.name):(\"select-no-type\");\r\n        return (\r\n            <select onChange={this.handleChange} className={\"form-control move \" + typeClass}>\r\n                <option key=\"\" value=\"\"></option>\r\n                {moves.map((move) =>\r\n                    <option key={move.move.name} value={move.move.name}>{titleize(move.move.name)}</option>\r\n                )}\r\n            </select>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PokemonImage from './image/Image';\r\nimport Type from '../types/type/Type';\r\nimport Move from './move/Move';\r\nimport { API } from '../params';\r\nimport './Pokemon.css';\r\nimport titleize from 'titleize';\r\n\r\nexport default class Pokemon extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pokemons: [],\r\n            selectedPokemon: null,\r\n            moves: [],\r\n            selectedMovesTypes: [],\r\n            pokemonTypes: []\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const API_ROUTE = \"pokemon?limit=964\";\r\n        fetch(API + API_ROUTE)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ pokemons: data.results })\r\n            })\r\n            .catch(console.log);\r\n    }\r\n\r\n    moveTypesCallback = (moveTypes) => {\r\n        let newMoveTypes = this.state.selectedMovesTypes;\r\n        if(moveTypes.old) {\r\n            newMoveTypes = newMoveTypes.filter((type) => {\r\n                return type !== moveTypes.old;\r\n            });\r\n        }\r\n        if(moveTypes.new && !newMoveTypes.includes(moveTypes.new)) {\r\n            newMoveTypes.push(moveTypes.new);\r\n        }\r\n        this.setState({\r\n            selectedMovesTypes: newMoveTypes\r\n        });\r\n        this.props.moveTypesCallback(this.props.num, newMoveTypes);\r\n    }\r\n\r\n    // Returns the object to send to the parent for changing stats\r\n    // Adding is -1 if we remove stats, and is 1 if we add stats\r\n    statsToSendToParent(adding) {\r\n        let datafromChild = {\r\n            'addition': 1 * adding,\r\n            'HP': this.state.selectedPokemon.stats[5].base_stat * adding,\r\n            'ATK': this.state.selectedPokemon.stats[4].base_stat * adding,\r\n            'DEF': this.state.selectedPokemon.stats[3].base_stat * adding,\r\n            'SPA': this.state.selectedPokemon.stats[2].base_stat * adding,\r\n            'SPD': this.state.selectedPokemon.stats[1].base_stat * adding,\r\n            'SPE': this.state.selectedPokemon.stats[0].base_stat * adding\r\n        };\r\n        return datafromChild;\r\n    }\r\n\r\n    // This code is fucking disgusting but didn't find another way to do it\r\n    handleChange(event) {\r\n        // Prevent from spamming API calls\r\n        event.persist();\r\n        event.target.setAttribute('disabled','disabled');\r\n        setTimeout(() => {\r\n            event.target.removeAttribute('disabled');\r\n        }, 500);\r\n        // Remove stats from previous pokemon in parent component\r\n        if(this.state.selectedPokemon)\r\n            this.props.statsCallback(this.statsToSendToParent(-1));\r\n        if (event.target.value === \"\") {\r\n            this.setState({\r\n                selectedPokemon: null,\r\n                moves: [],\r\n                selectedMovesTypes: []\r\n            });\r\n            // Reset types to send to parent component\r\n            this.props.pokemonTypesCallback(this.props.num, []);\r\n            // Reset moves to send to parent component\r\n            this.props.moveTypesCallback(this.props.num, []);\r\n        }\r\n        else {\r\n            // Fetch data of 1 pokemon\r\n            const API_ROUTE = \"pokemon/\" + event.target.value;\r\n            fetch(API + API_ROUTE)\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    this.setState({ selectedPokemon: data, selectedMovesTypes: [] });\r\n                    // Reset types to send to parent component\r\n                    let types = [];\r\n                    data.types.forEach(type => types.push(type.type.name));\r\n                    this.props.pokemonTypesCallback(this.props.num, types);\r\n                    // Reset moves\r\n                    this.props.moveTypesCallback(this.props.num, []);\r\n                    // Get stats and send to parents\r\n                    this.props.statsCallback(this.statsToSendToParent(1));\r\n                    // Get their evolutionary line to fill moves\r\n                    let tmpPokemon = this.state.selectedPokemon;\r\n                    let finalMoves = tmpPokemon.moves;\r\n                    let species = {};\r\n                    fetch(API + \"pokemon-species/\" + tmpPokemon.species.name)\r\n                        .then(res => res.json())\r\n                        .then((data) => {\r\n                            species = data;\r\n                            if (!species.evolves_from_species)\r\n                                this.setState({ moves: finalMoves });\r\n                            else {\r\n                                fetch(API + \"pokemon/\" + species.evolves_from_species.name)\r\n                                    .then(res => res.json())\r\n                                    .then((data) => {\r\n                                        tmpPokemon = data;\r\n                                        finalMoves = finalMoves\r\n                                            .concat(tmpPokemon.moves)\r\n                                            .filter((move, index, self) =>\r\n                                                index === self.findIndex((m) => (\r\n                                                    m.move.name === move.move.name\r\n                                                ))\r\n                                            )\r\n                                        this.setState({ moves: finalMoves });\r\n                                    })\r\n                                    .catch(console.log);\r\n                            }\r\n                        })\r\n                        .catch(console.log);\r\n                })\r\n                .catch(console.log);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const selectedPokemon = this.state.selectedPokemon;\r\n        // Sort pokemons by names\r\n        const pokemons = this.state.pokemons.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            else return -1;\r\n        })\r\n        // Sort pokemon moves by names\r\n        const moves = this.state.moves.sort((a, b) => {\r\n            if (a.move.name > b.move.name) return 1;\r\n            else return -1;\r\n        });\r\n        // Pokemon types\r\n        let types = [];\r\n        if (selectedPokemon) {\r\n            types = selectedPokemon.types.sort((a, b) => {\r\n                return a.slot - b.slot;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"box\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                        <PokemonImage name={(selectedPokemon) ? (selectedPokemon.name) : \"\"} />\r\n                        <select onChange={this.handleChange} className=\"form-control species-name\">\r\n                            <option key=\"\" value=\"\"></option>\r\n                            {pokemons.map((pokemon) =>\r\n                                <option key={pokemon.name} value={pokemon.name}>{titleize(pokemon.name)}</option>\r\n                            )}\r\n                        </select>\r\n                        <div className=\"types\">\r\n                            {types.map((type) =>\r\n                                <Type key={type.type.name} type={type.type.name} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-7\">\r\n                        <div className=\"moves\">\r\n                            <Move moves={moves} moveTypesCallback={this.moveTypesCallback} />\r\n                            <Move moves={moves} moveTypesCallback={this.moveTypesCallback} />\r\n                            <Move moves={moves} moveTypesCallback={this.moveTypesCallback} />\r\n                            <Move moves={moves} moveTypesCallback={this.moveTypesCallback} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Stat.css';\r\n\r\n/**\r\n * Returns the rgb() string for the color that should be used for the progressbar.\r\n * @param statNumber The number corresponding to the stat for which you want the color.\r\n */\r\nfunction getColorString(statNumber) {\r\n    return 'rgb('+ ((255 - statNumber - 50 < 0) ? (0) : (255 - statNumber - 50)) + ',' + (((statNumber + 50) > 255) ? (255) : (statNumber + 50))  + ',0)';\r\n}\r\n\r\nexport default function Stat(props) {\r\n    let stat_value = props.value;\r\n    let stat_percentage = ((stat_value/255)*100);\r\n    let style = {\r\n        width: stat_percentage+'%',\r\n        backgroundColor: getColorString(stat_value)\r\n    };\r\n    return (\r\n        <div className=\"progress\">\r\n            <span className=\"stat-name\">{props.name}</span>\r\n            <div className=\"progress-bar\" \r\n                role=\"progressbar\"\r\n                title={props.name + ' : ' + props.value}\r\n                style={style}>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport Stat from './stat/Stat';\r\nimport './Stats.css';\r\n\r\nexport default class Stats extends Component {\r\n    render() {\r\n        const values = this.props.values;\r\n        const nbPokemon = this.props.selectedPokemonNumber;\r\n        return (\r\n            <div className=\"col-lg-3 col-md-4 col-12 right-border\">\r\n                <h3>STATS AVERAGE</h3>\r\n                <div>\r\n                    {Object.keys(values).map(key =>\r\n                        <Stat key={key} name={key} value={(nbPokemon === 0) ? (0) : (values[key] / nbPokemon)} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export const typesList = ['normal','fighting','flying','poison','ground','rock','bug','ghost','steel','fire','water','grass','electric','psychic','ice','dragon','dark','fairy'];\r\n\r\nexport const typesStrengths = {\r\n    'normal':[],\r\n    'fighting':['steel','rock','normal','ice','dark'],\r\n    'flying':['grass','fighting','bug'],\r\n    'poison':['grass','fairy'],\r\n    'ground':['rock','steel','fire','electric','poison'],\r\n    'rock':['fire','flying','bug','ice'],\r\n    'bug':['grass','psychic','dark'],\r\n    'ghost':['ghost','psychic'],\r\n    'steel':['fairy','rock','ice'],\r\n    'fire':['grass','bug','ice','steel'],\r\n    'water':['fire','ground','rock'],\r\n    'grass':['water','rock','ground'],\r\n    'electric':['water','flying'],\r\n    'psychic':['poison','fighting'],\r\n    'ice':['grass','ground','flying','dragon'],\r\n    'dragon':['dragon'],\r\n    'dark':['ghost','psychic'],\r\n    'fairy':['fighting','dragon','dark']\r\n};\r\n\r\nexport const typesWeaknesses = {\r\n    'normal':['fighting'],\r\n    'fighting':['fairy','psychic','flying'],\r\n    'flying':['ice','electric','rock'],\r\n    'poison':['ground','psychic'],\r\n    'ground':['water','grass','ice'],\r\n    'rock':['water','ground','fighting','steel','grass'],\r\n    'bug':['fire','rock','flying'],\r\n    'ghost':['ghost','dark'],\r\n    'steel':['fire','fighting','ground'],\r\n    'fire':['water','ground','rock'],\r\n    'water':['electric','grass'],\r\n    'grass':['fire','bug','flying','ice'],\r\n    'electric':['ground'],\r\n    'psychic':['dark','ghost','bug'],\r\n    'ice':['fighting','fire','steel','rock'],\r\n    'dragon':['dragon','fairy'],\r\n    'dark':['bug','fighting','fairy'],\r\n    'fairy':['steel','poison']\r\n};\r\n\r\nexport const typesResists = {\r\n    'normal':['ghost'],\r\n    'fighting':['bug','dark','rock'],\r\n    'flying':['grass','fighting','bug','ground'],\r\n    'poison':['poison','fighting','fairy','bug','grass'],\r\n    'ground':['rock','electric','poison'],\r\n    'rock':['fire','normal','poison','flying'],\r\n    'bug':['fighting','grass','ground'],\r\n    'ghost':['normal','fighting','poison','bug'],\r\n    'steel':['steel','dragon','fairy','ice','bug','normal','grass','poison','psychic','rock','flying'],\r\n    'fire':['fire','grass','bug','steel','fairy','ice'],\r\n    'water':['water','ice','steel','fire'],\r\n    'grass':['grass','ground','water','electric'],\r\n    'electric':['electric','flying','steel'],\r\n    'psychic':['psychic','fighting'],\r\n    'ice':['ice'],\r\n    'dragon':['water','electric','fire','grass'],\r\n    'dark':['ghost','dark'],\r\n    'fairy':['fighting','dragon','bug']\r\n};","import React, { Component } from 'react';\r\nimport Type from '../types/type/Type';\r\nimport './Types.css';\r\nimport * as TypeRelations from './type_relations';\r\n\r\nexport default class Types extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lastMovesTypes: []\r\n        }\r\n    }\r\n\r\n    getInitialWeaknesses() {\r\n        let weaknesses = {};\r\n        TypeRelations.typesList.forEach(element => {\r\n            weaknesses[element] = 0;\r\n        });\r\n        return weaknesses;\r\n    }\r\n\r\n    getInitialStrengths() {\r\n        let strengths = {};\r\n        TypeRelations.typesList.forEach(element => {\r\n            strengths[element] = 0;\r\n        });\r\n        return strengths;\r\n    }\r\n\r\n    calcWeaknesses() {\r\n        let weaknesses = this.getInitialWeaknesses();\r\n        this.props.pokemonsTypes.forEach(pokemonTypes => {\r\n            let firstTypeWeaknesses = (pokemonTypes[0])?(TypeRelations.typesWeaknesses[pokemonTypes[0]]):([]);\r\n            let secondTypeWeaknesses = (pokemonTypes[1])?(TypeRelations.typesWeaknesses[pokemonTypes[1]]):([]);\r\n            let firstTypeResists = (pokemonTypes[0])?(TypeRelations.typesResists[pokemonTypes[0]]):([]);\r\n            let secondTypeResists = (pokemonTypes[1])?(TypeRelations.typesResists[pokemonTypes[1]]):([]);\r\n            firstTypeWeaknesses = firstTypeWeaknesses.filter((weakness) => !secondTypeResists.includes(weakness));\r\n            secondTypeWeaknesses = secondTypeWeaknesses.filter((weakness) => !firstTypeResists.includes(weakness));\r\n            let pokeWeaknesses = new Set([...firstTypeWeaknesses, ...secondTypeWeaknesses]);\r\n            pokeWeaknesses.forEach(type => weaknesses[type]++);\r\n        })\r\n        return weaknesses;\r\n    }\r\n\r\n    calcStrengths() {\r\n        let strengths = this.getInitialStrengths();\r\n        let alreadyDoneTypes = [];\r\n        this.props.movesTypes.forEach(pokemonMoveTypes => {\r\n            alreadyDoneTypes = [];\r\n            pokemonMoveTypes.forEach(type => {\r\n                let strengthsOfType = TypeRelations.typesStrengths[type];\r\n                strengthsOfType.forEach(strength => {\r\n                    if (!alreadyDoneTypes.includes(strength)) {\r\n                        strengths[strength]++;\r\n                        alreadyDoneTypes.push(strength);\r\n                    }\r\n                })\r\n            })\r\n        });\r\n        return strengths;\r\n    }\r\n\r\n    render() {\r\n        let weaknesses = this.calcWeaknesses();\r\n        let strengths = this.calcStrengths();\r\n\r\n        return (\r\n            <div className=\"col-lg-9 col-md-8 col-12 type-table-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col type-table\">\r\n                        <h3>STRENGTHS</h3>\r\n                        <div className=\"type-list\">\r\n                            {Object.keys(strengths).map((type) =>\r\n                                <div key={type} className=\"typecont\">\r\n                                    <Type type={type} />\r\n                                    <span className='number-type'>{strengths[type]}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col type-table\">\r\n                        <h3>WEAKNESSES</h3>\r\n                        <div className=\"type-list\">\r\n                            {Object.keys(weaknesses).map((type) =>\r\n                                <div key={type} className=\"typecont\">\r\n                                    <Type type={type} />\r\n                                    <span className='number-type'>{weaknesses[type]}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Pokemon from './pokemon/Pokemon';\r\nimport Stats from './stats/Stats';\r\nimport './AppContainer.css';\r\nimport Types from './types/Types';\r\n\r\nexport default class AppContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movesTypes: [],\r\n            pokemonsTypes: [],\r\n            selectedPokemonNumber: 0,\r\n            values: {\r\n                'HP': 0,\r\n                'ATK': 0,\r\n                'DEF': 0,\r\n                'SPA': 0,\r\n                'SPD': 0,\r\n                'SPE': 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    moveTypesCallback = (num, dataFromChild) => {\r\n        let newTypes = this.state.movesTypes;\r\n        newTypes[num] = dataFromChild;\r\n        this.setState({ movesTypes: newTypes });\r\n    }\r\n\r\n    pokemonTypesCallback = (num, dataFromChild) => {\r\n        let newTypes = this.state.pokemonsTypes;\r\n        newTypes[num] = dataFromChild;\r\n        this.setState({ pokemonsTypes: newTypes });\r\n    }\r\n\r\n    statsCallback = (dataFromChild) => {\r\n        // dataFromChild.addition will be -1 if we removed a pokemon, else 1\r\n        let newSelectedPokemonNb;\r\n        let newValues = this.state.values;\r\n        Object.keys(dataFromChild).forEach(key => {\r\n            if (key === 'addition')\r\n                newSelectedPokemonNb = this.state.selectedPokemonNumber + dataFromChild.addition\r\n            else\r\n                newValues[key] += dataFromChild[key];\r\n        });\r\n        this.setState({\r\n            values: newValues,\r\n            selectedPokemonNumber: newSelectedPokemonNb\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const selectedPokemonNumber = this.state.selectedPokemonNumber;\r\n        const values = this.state.values;\r\n        const movesTypes = this.state.movesTypes;\r\n        const pokemonsTypes = this.state.pokemonsTypes;\r\n        return (\r\n            <div className=\"container-fluid app\">\r\n                <div className=\"row\">\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={0} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={1} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={2} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={3} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={4} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={5} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Stats selectedPokemonNumber={selectedPokemonNumber} values={values} />\r\n                    <Types movesTypes={movesTypes} pokemonsTypes={pokemonsTypes} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n            <div className=\"container\">\r\n                <span className=\"navbar-brand\">Pokémon Team Planner</span>\r\n                <a href=\"https://github.com/Kairozen/pokemon-team-planner\">\r\n                    <img alt=\"GitHub\" className=\"icon invert\" src=\"./assets/github.svg\" />\r\n                </a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import React from 'react';\nimport AppContainer from './components/AppContainer'\nimport Header from './components/header/Header'\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <AppContainer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}