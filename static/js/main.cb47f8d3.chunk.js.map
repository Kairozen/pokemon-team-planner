{"version":3,"sources":["components/pokemon/image/Image.js","components/types/type/Type.js","components/params.js","components/pokemon/move/moveinfo/Moveinfo.js","components/pokemon/move/Move.js","components/stats/stat/Stat.js","components/types/type_relations.js","components/pokemon/pokemoninfo/Pokemoninfo.js","components/pokemon/Pokemon.js","components/stats/Stats.js","components/types/Types.js","components/AppContainer.js","components/header/Header.js","App.js","serviceWorker.js","index.js"],"names":["PokemonImage","props","pokemonName","name","replace","react_default","a","createElement","alt","className","src","Type","type","toUpperCase","API","Moveinfo","moveinfoClass","isVisible","damageClassImage","move","damage_class","effect","effect_entries","effect_chance","titleize","style","float","Type_Type","power","accuracy","Move","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseHoverIn","bind","assertThisInitialized","handleMouseHoverOut","handleChange","state","isHovering","selectedMove","setState","oldType","newType","old","new","event","_this2","persist","target","setAttribute","setTimeout","removeAttribute","value","moveTypesCallback","moveTypesToSendToParent","API_ROUTE","fetch","then","res","json","data","catch","console","log","moves","typeClass","Fragment","onMouseEnter","onMouseLeave","onChange","key","map","Moveinfo_Moveinfo","Component","RoundAndFix","n","d","m","Math","pow","round","Stat","statNumber","stat_value","width","backgroundColor","role","title","typesList","typesStrengths","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","typesWeaknesses","typesResists","typesResistsWithoutImmunities","typesImmunities","calcWeaknessesAndResists","types","weaknessesAndResists","weaknesses","TypeRelations","forEach","element","getInitialWeaknessesAndResists","firstTypeWeaknesses","secondTypeWeaknesses","firstTypeResists","secondTypeResists","firstTypeImmunities","secondTypeImmunities","pokeWeaknesses","concat","pokeResists","result","doubleWeaknesses","neutral","resists","doubleResists","immunities","keys","push","render","rawStats","pokemoninfoClass","stats","HP","pokemon","base_stat","ATK","DEF","SPA","SPD","SPE","species","Stat_Stat","length","Pokemon","moveTypes","newMoveTypes","selectedMovesTypes","filter","includes","num","pokemons","selectedPokemon","pokemonTypes","results","adding","addition","_this3","statsCallback","statsToSendToParent","pokemonTypesCallback","tmpPokemon","finalMoves","evolves_from_species","index","self","findIndex","sort","b","slot","Move_Move","Pokemoninfo_render","Stats","values","nbPokemon","selectedPokemonNumber","Types","lastMovesTypes","strengths","getInitialWeaknesses","pokemonsTypes","weakness","Set","toConsumableArray","getInitialStrengths","alreadyDoneTypes","movesTypes","pokemonMoveTypes","strength","calcWeaknesses","calcStrengths","AppContainer","dataFromChild","newTypes","newSelectedPokemonNb","newValues","Pokemon_Pokemon","Stats_Stats","Types_Types","Header","href","App","Header_Header","AppContainer_AppContainer","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb47f8d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Image.css'\r\n\r\nexport default function PokemonImage(props) {\r\n    let pokemonName = props.name.replace(/-/g,'');\r\n    if(pokemonName === \"\")\r\n        return <img alt={pokemonName} className=\"pokemon-image\" src='./assets/sprites/missingno.gif'/>\r\n    else\r\n        return <img alt={pokemonName} className=\"pokemon-image\" src={'./assets/sprites/' + pokemonName + '.gif'}/>\r\n}","import React from 'react';\r\nimport './Type.css';\r\n\r\nexport default function Type(props) {\r\n    return (\r\n        <div className=\"type\">\r\n            <div className={props.type}>{props.type.toUpperCase()}</div>\r\n        </div>\r\n    );\r\n}","export const API = \"https://pokeapi.co/api/v2/\";","import React from 'react';\r\nimport './Moveinfo.css';\r\nimport Type from '../../../types/type/Type';\r\nimport titleize from 'titleize';\r\nexport default function Moveinfo(props) {\r\n    const moveinfoClass = (props.isVisible) ? ('moveinfo-visible') : ('moveinfo-hidden');\r\n    const damageClassImage = './assets/' + props.move.damage_class.name + '.png';\r\n    let effect = props.move.effect_entries[0].effect.replace(\"$effect_chance\", props.move.effect_chance);\r\n\r\n    return (\r\n        <div className={\"moveinfo-container \" + moveinfoClass}>\r\n            <h6>\r\n                {titleize(props.move.name)}\r\n                <div style={{ float: 'right' }}>\r\n                    <Type type={props.move.type.name} />\r\n                </div>\r\n            </h6>\r\n            <div className=\"row\">\r\n                <div className=\"moveinfo-data col-5\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th><img alt={props.move.damage_class.name} src={damageClassImage} /></th>\r\n                                <th></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Power</th>\r\n                                <th className='center'>{(props.move.power) ? (props.move.power) : ('--')}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Accuracy</th>\r\n                                <th className='center'>{(props.move.accuracy) ? (props.move.accuracy) : ('--')}</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"moveinfo-data col-7\">\r\n                    <p>\r\n                        {effect}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport titleize from 'titleize';\r\nimport './Move.css';\r\nimport { API } from '../../params'\r\nimport Moveinfo from './moveinfo/Moveinfo';\r\n\r\nexport default class Move extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleMouseHoverIn = this.handleMouseHoverIn.bind(this);\r\n        this.handleMouseHoverOut = this.handleMouseHoverOut.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            isHovering: false,\r\n            selectedMove: null\r\n        };\r\n    }\r\n\r\n    handleMouseHoverOut() {\r\n        this.setState({ isHovering: false })\r\n    }\r\n\r\n    handleMouseHoverIn() {\r\n        this.setState({ isHovering: true })\r\n    }\r\n\r\n    // Returns the object to send to the parent for changing attack type\r\n    moveTypesToSendToParent(oldType, newType) {\r\n        let dataFromChild = {\r\n            old: oldType,\r\n            new: newType\r\n        }\r\n        return dataFromChild;\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Prevent from spamming API calls\r\n        event.persist();\r\n        event.target.setAttribute('disabled', 'disabled');\r\n        setTimeout(() => {\r\n            event.target.removeAttribute('disabled');\r\n        }, 500);\r\n        let oldType = null;\r\n        let newType = null;\r\n        // Remove types from previous move in parent component\r\n        if (this.state.selectedMove && this.state.selectedMove.damage_class.name !== \"status\") {\r\n            oldType = this.state.selectedMove.type.name;\r\n        }\r\n        if (event.target.value === \"\") {\r\n            this.setState({ isHovering: false, selectedMove: null });\r\n            this.props.moveTypesCallback(this.moveTypesToSendToParent(oldType, newType));\r\n        }\r\n        else {\r\n            // Fetch data of the move\r\n            const API_ROUTE = \"move/\" + event.target.value;\r\n            fetch(API + API_ROUTE)\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    this.setState({ isHovering: false, selectedMove: data });\r\n                    if (data.damage_class.name !== \"status\") {\r\n                        newType = data.type.name;\r\n                    }\r\n                    this.props.moveTypesCallback(this.moveTypesToSendToParent(oldType, newType));\r\n                })\r\n                .catch(console.log);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const moves = this.props.moves;\r\n        const selectedMove = this.state.selectedMove;\r\n        const typeClass = (selectedMove) ? (\"select-\" + selectedMove.type.name) : (\"select-no-type\");\r\n        return (\r\n            <React.Fragment>\r\n                <select onMouseEnter={this.handleMouseHoverIn}\r\n                    onMouseLeave={this.handleMouseHoverOut}\r\n                    onChange={this.handleChange} className={\"form-control move \" + typeClass}>\r\n                    <option className=\"white\" key=\"\" value=\"\"></option>\r\n                    {moves.map((move) =>\r\n                        <option key={move.move.name} value={move.move.name}>{titleize(move.move.name)}</option>\r\n                    )}\r\n                </select>\r\n                {\r\n                    selectedMove &&\r\n                    <Moveinfo isVisible={this.state.isHovering} move={selectedMove} />\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Stat.css';\r\n\r\n/**\r\n * Returns the rgb() string for the color that should be used for the progressbar.\r\n * @param statNumber The number corresponding to the stat for which you want the color.\r\n */\r\nfunction getColorString(statNumber) {\r\n    return 'rgb(' + ((255 - statNumber - 50 < 0) ? (0) : (255 - statNumber - 50)) + ',' + (((statNumber + 50) > 255) ? (255) : (statNumber + 50)) + ',0)';\r\n}\r\n\r\nfunction RoundAndFix(n, d) {\r\n    var m = Math.pow(10, d);\r\n    return Math.round(n * m) / m;\r\n}\r\n\r\nexport default function Stat(props) {\r\n    let stat_value = props.value;\r\n    let stat_percentage = ((stat_value / 255) * 100);\r\n    let style = {\r\n        width: stat_percentage + '%',\r\n        backgroundColor: getColorString(stat_value)\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"progress col-10\">\r\n                    <span className=\"stat-name\">{props.name}</span>\r\n                    <div className=\"progress-bar\"\r\n                        role=\"progressbar\"\r\n                        title={props.name + ' : ' + RoundAndFix(props.value, 1)}\r\n                        style={style}>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-2 stat-value\">{RoundAndFix(props.value, 1)}</div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","export const typesList = ['normal','fighting','flying','poison','ground','rock','bug','ghost','steel','fire','water','grass','electric','psychic','ice','dragon','dark','fairy'];\r\n\r\nexport const typesStrengths = {\r\n    'normal':[],\r\n    'fighting':['steel','rock','normal','ice','dark'],\r\n    'flying':['grass','fighting','bug'],\r\n    'poison':['grass','fairy'],\r\n    'ground':['rock','steel','fire','electric','poison'],\r\n    'rock':['fire','flying','bug','ice'],\r\n    'bug':['grass','psychic','dark'],\r\n    'ghost':['ghost','psychic'],\r\n    'steel':['fairy','rock','ice'],\r\n    'fire':['grass','bug','ice','steel'],\r\n    'water':['fire','ground','rock'],\r\n    'grass':['water','rock','ground'],\r\n    'electric':['water','flying'],\r\n    'psychic':['poison','fighting'],\r\n    'ice':['grass','ground','flying','dragon'],\r\n    'dragon':['dragon'],\r\n    'dark':['ghost','psychic'],\r\n    'fairy':['fighting','dragon','dark']\r\n};\r\n\r\nexport const typesWeaknesses = {\r\n    'normal':['fighting'],\r\n    'fighting':['fairy','psychic','flying'],\r\n    'flying':['ice','electric','rock'],\r\n    'poison':['ground','psychic'],\r\n    'ground':['water','grass','ice'],\r\n    'rock':['water','ground','fighting','steel','grass'],\r\n    'bug':['fire','rock','flying'],\r\n    'ghost':['ghost','dark'],\r\n    'steel':['fire','fighting','ground'],\r\n    'fire':['water','ground','rock'],\r\n    'water':['electric','grass'],\r\n    'grass':['fire','bug','flying','ice','poison'],\r\n    'electric':['ground'],\r\n    'psychic':['dark','ghost','bug'],\r\n    'ice':['fighting','fire','steel','rock'],\r\n    'dragon':['dragon','fairy'],\r\n    'dark':['bug','fighting','fairy'],\r\n    'fairy':['steel','poison']\r\n};\r\n\r\nexport const typesResists = {\r\n    'normal':['ghost'],\r\n    'fighting':['bug','dark','rock'],\r\n    'flying':['grass','fighting','bug','ground'],\r\n    'poison':['poison','fighting','fairy','bug','grass'],\r\n    'ground':['rock','electric','poison'],\r\n    'rock':['fire','normal','poison','flying'],\r\n    'bug':['fighting','grass','ground'],\r\n    'ghost':['normal','fighting','poison','bug'],\r\n    'steel':['steel','dragon','fairy','ice','bug','normal','grass','poison','psychic','rock','flying'],\r\n    'fire':['fire','grass','bug','steel','fairy','ice'],\r\n    'water':['water','ice','steel','fire'],\r\n    'grass':['grass','ground','water','electric'],\r\n    'electric':['electric','flying','steel'],\r\n    'psychic':['psychic','fighting'],\r\n    'ice':['ice'],\r\n    'dragon':['water','electric','fire','grass'],\r\n    'dark':['ghost','dark','psychic'],\r\n    'fairy':['fighting','dragon','bug']\r\n};\r\n\r\nexport const typesResistsWithoutImmunities = {\r\n    'normal':[],\r\n    'fighting':['bug','dark','rock'],\r\n    'flying':['grass','fighting','bug'],\r\n    'poison':['poison','fighting','fairy','bug','grass'],\r\n    'ground':['rock','poison'],\r\n    'rock':['fire','normal','poison','flying'],\r\n    'bug':['fighting','grass','ground'],\r\n    'ghost':['poison','bug'],\r\n    'steel':['steel','dragon','fairy','ice','bug','normal','grass','psychic','rock','flying'],\r\n    'fire':['fire','grass','bug','steel','fairy','ice'],\r\n    'water':['water','ice','steel','fire'],\r\n    'grass':['grass','ground','water','electric'],\r\n    'electric':['electric','flying','steel'],\r\n    'psychic':['psychic','fighting'],\r\n    'ice':['ice'],\r\n    'dragon':['water','electric','fire','grass'],\r\n    'dark':['ghost','dark'],\r\n    'fairy':['fighting','bug']\r\n};\r\n\r\nexport const typesImmunities = {\r\n    'normal':['ghost'],\r\n    'fighting':[],\r\n    'flying':['ground'],\r\n    'poison':[],\r\n    'ground':['electric'],\r\n    'rock':[],\r\n    'bug':[],\r\n    'ghost':['normal','fighting'],\r\n    'steel':['poison'],\r\n    'fire':[],\r\n    'water':[],\r\n    'grass':[],\r\n    'electric':[],\r\n    'psychic':[],\r\n    'ice':[],\r\n    'dragon':[],\r\n    'dark':['psychic'],\r\n    'fairy':['dragon']\r\n};","import React from 'react';\r\nimport './Pokemoninfo.css';\r\nimport Type from '../../types/type/Type';\r\nimport titleize from 'titleize';\r\nimport Stat from '../../stats/stat/Stat';\r\nimport * as TypeRelations from '../../types/type_relations';\r\n\r\nfunction getInitialWeaknessesAndResists() {\r\n    let weaknesses = {};\r\n    TypeRelations.typesList.forEach(element => {\r\n        weaknesses[element] = 0;\r\n    });\r\n    return weaknesses;\r\n}\r\n\r\nfunction calcWeaknessesAndResists(types) {\r\n    let weaknessesAndResists = getInitialWeaknessesAndResists();\r\n    let firstTypeWeaknesses = (types[0]) ? (TypeRelations.typesWeaknesses[types[0].type.name]) : ([]);\r\n    let secondTypeWeaknesses = (types[1]) ? (TypeRelations.typesWeaknesses[types[1].type.name]) : ([]);\r\n    let firstTypeResists = (types[0]) ? (TypeRelations.typesResistsWithoutImmunities[types[0].type.name]) : ([]);\r\n    let secondTypeResists = (types[1]) ? (TypeRelations.typesResistsWithoutImmunities[types[1].type.name]) : ([]);\r\n    let firstTypeImmunities = (types[1]) ? (TypeRelations.typesImmunities[types[0].type.name]) : ([]);\r\n    let secondTypeImmunities = (types[1]) ? (TypeRelations.typesImmunities[types[1].type.name]) : ([]);\r\n    let pokeWeaknesses = firstTypeWeaknesses.concat(secondTypeWeaknesses);\r\n    let pokeResists = firstTypeResists.concat(secondTypeResists);\r\n    let pokeImmunities = firstTypeImmunities.concat(secondTypeImmunities);\r\n    pokeImmunities.forEach(type => weaknessesAndResists[type] = 'immune');\r\n    pokeWeaknesses.forEach(type => {\r\n        if (weaknessesAndResists[type] !== 'immune')\r\n            weaknessesAndResists[type]++;\r\n    });\r\n    pokeResists.forEach(type => {\r\n        if (weaknessesAndResists[type] !== 'immune')\r\n            weaknessesAndResists[type]--;\r\n    });\r\n    let result = {\r\n        doubleWeaknesses: [],\r\n        weaknesses: [],\r\n        neutral: [],\r\n        resists: [],\r\n        doubleResists: [],\r\n        immunities: []\r\n    }\r\n    Object.keys(weaknessesAndResists).forEach((type) => {\r\n        if (weaknessesAndResists[type] === 'immune')\r\n            result.immunities.push(type);\r\n        else if (weaknessesAndResists[type] === 2)\r\n            result.doubleWeaknesses.push(type);\r\n        else if (weaknessesAndResists[type] === 1)\r\n            result.weaknesses.push(type);\r\n        else if (weaknessesAndResists[type] === -1)\r\n            result.resists.push(type);\r\n        else if (weaknessesAndResists[type] === -2)\r\n            result.doubleResists.push(type);\r\n        else\r\n            result.neutral.push(type);\r\n    });\r\n    return result;\r\n}\r\n\r\nfunction getStats(rawStats) {\r\n    let stats = {\r\n        'HP': rawStats[5].base_stat,\r\n        'ATK': rawStats[4].base_stat,\r\n        'DEF': rawStats[3].base_stat,\r\n        'SPA': rawStats[2].base_stat,\r\n        'SPD': rawStats[1].base_stat,\r\n        'SPE': rawStats[0].base_stat\r\n    };\r\n    return stats;\r\n}\r\n\r\nexport default function render(props) {\r\n    const pokemoninfoClass = (props.isVisible) ? ('pokemoninfo-visible') : ('pokemoninfo-hidden');\r\n    const types = props.types;\r\n    const stats = getStats(props.pokemon.stats);\r\n    const weaknessesAndResists = calcWeaknessesAndResists(types);\r\n    return (\r\n        <div className={\"pokemoninfo-container \" + pokemoninfoClass}>\r\n            <h6>\r\n                {titleize(props.pokemon.species.name)}\r\n                <div style={{ float: 'right' }}>\r\n                    {\r\n                        types.map((type) =>\r\n                            <Type key={type.type.name} type={type.type.name} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </h6>\r\n            <div className=\"row\">\r\n                <div className=\"pokemoninfo-data col-5\">\r\n                    {\r\n                        Object.keys(stats).map((key) =>\r\n                            <Stat key={key} name={key} value={stats[key]} />\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"pokemoninfo-data pokemoninfo-type-relations col-7\">\r\n                    {\r\n                        weaknessesAndResists.doubleResists.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Strongly resists</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.doubleResists.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        weaknessesAndResists.resists.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Resists</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.resists.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        /* weaknessesAndResists.neutral.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Neutral</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.neutral.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment> */\r\n                    }\r\n                    {\r\n                        weaknessesAndResists.weaknesses.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Weak to</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.weaknesses.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        weaknessesAndResists.doubleWeaknesses.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Very weak to</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.doubleWeaknesses.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        weaknessesAndResists.immunities.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Immune to</h5>\r\n                            <div>\r\n                                {weaknessesAndResists.immunities.map(type => \r\n                                    <Type key={type} type={type} />\r\n                                )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport PokemonImage from './image/Image';\r\nimport Type from '../types/type/Type';\r\nimport Move from './move/Move';\r\nimport Pokemoninfo from './pokemoninfo/Pokemoninfo';\r\nimport { API } from '../params';\r\nimport './Pokemon.css';\r\nimport titleize from 'titleize';\r\n\r\nexport default class Pokemon extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.handleMouseHoverOut = this.handleMouseHoverOut.bind(this);\r\n        this.handleMouseHoverIn = this.handleMouseHoverIn.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            pokemons: [],\r\n            isHovering: false,\r\n            selectedPokemon: null,\r\n            moves: [],\r\n            selectedMovesTypes: [],\r\n            pokemonTypes: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const API_ROUTE = \"pokemon?limit=964\";\r\n        fetch(API + API_ROUTE)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ pokemons: data.results })\r\n            })\r\n            .catch(console.log);\r\n    }\r\n\r\n    handleMouseHoverIn() {\r\n        this.setState({ isHovering: true })\r\n    }\r\n\r\n    handleMouseHoverOut() {\r\n        this.setState({ isHovering: false })\r\n    }\r\n\r\n    moveTypesCallback = (moveTypes) => {\r\n        let newMoveTypes = this.state.selectedMovesTypes;\r\n        if (moveTypes.old) {\r\n            newMoveTypes = newMoveTypes.filter((type) => {\r\n                return type !== moveTypes.old;\r\n            });\r\n        }\r\n        if (moveTypes.new && !newMoveTypes.includes(moveTypes.new)) {\r\n            newMoveTypes.push(moveTypes.new);\r\n        }\r\n        this.setState({\r\n            selectedMovesTypes: newMoveTypes\r\n        });\r\n        this.props.moveTypesCallback(this.props.num, newMoveTypes);\r\n    }\r\n\r\n    // Returns the object to send to the parent for changing stats\r\n    // Adding is -1 if we remove stats, and is 1 if we add stats\r\n    statsToSendToParent(adding) {\r\n        let datafromChild = {\r\n            'addition': 1 * adding,\r\n            'HP': this.state.selectedPokemon.stats[5].base_stat * adding,\r\n            'ATK': this.state.selectedPokemon.stats[4].base_stat * adding,\r\n            'DEF': this.state.selectedPokemon.stats[3].base_stat * adding,\r\n            'SPA': this.state.selectedPokemon.stats[2].base_stat * adding,\r\n            'SPD': this.state.selectedPokemon.stats[1].base_stat * adding,\r\n            'SPE': this.state.selectedPokemon.stats[0].base_stat * adding\r\n        };\r\n        return datafromChild;\r\n    }\r\n\r\n    // This code is fucking disgusting but didn't find another way to do it\r\n    handleChange(event) {\r\n        // Prevent from spamming API calls\r\n        event.persist();\r\n        event.target.setAttribute('disabled', 'disabled');\r\n        setTimeout(() => {\r\n            event.target.removeAttribute('disabled');\r\n        }, 500);\r\n        // Remove stats from previous pokemon in parent component\r\n        if (this.state.selectedPokemon)\r\n            this.props.statsCallback(this.statsToSendToParent(-1));\r\n        if (event.target.value === \"\") {\r\n            this.setState({\r\n                selectedPokemon: null,\r\n                isHovering: false,\r\n                moves: [],\r\n                selectedMovesTypes: []\r\n            });\r\n            // Reset types to send to parent component\r\n            this.props.pokemonTypesCallback(this.props.num, []);\r\n            // Reset moves to send to parent component\r\n            this.props.moveTypesCallback(this.props.num, []);\r\n        }\r\n        else {\r\n            // Fetch data of 1 pokemon\r\n            const API_ROUTE = \"pokemon/\" + event.target.value;\r\n            fetch(API + API_ROUTE)\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    this.setState({ \r\n                        selectedPokemon: data, \r\n                        selectedMovesTypes: [],\r\n                        isHovering: false\r\n                    });\r\n                    // Reset types to send to parent component\r\n                    let types = [];\r\n                    data.types.forEach(type => types.push(type.type.name));\r\n                    this.props.pokemonTypesCallback(this.props.num, types);\r\n                    // Reset moves\r\n                    this.props.moveTypesCallback(this.props.num, []);\r\n                    // Get stats and send to parents\r\n                    this.props.statsCallback(this.statsToSendToParent(1));\r\n                    // Get their evolutionary line to fill moves\r\n                    let tmpPokemon = this.state.selectedPokemon;\r\n                    let finalMoves = tmpPokemon.moves;\r\n                    let species = {};\r\n                    fetch(API + \"pokemon-species/\" + tmpPokemon.species.name)\r\n                        .then(res => res.json())\r\n                        .then((data) => {\r\n                            species = data;\r\n                            if (!species.evolves_from_species)\r\n                                this.setState({ moves: finalMoves });\r\n                            else {\r\n                                fetch(API + \"pokemon/\" + species.evolves_from_species.name)\r\n                                    .then(res => res.json())\r\n                                    .then((data) => {\r\n                                        tmpPokemon = data;\r\n                                        finalMoves = finalMoves\r\n                                            .concat(tmpPokemon.moves)\r\n                                            .filter((move, index, self) =>\r\n                                                index === self.findIndex((m) => (\r\n                                                    m.move.name === move.move.name\r\n                                                ))\r\n                                            )\r\n                                        this.setState({ moves: finalMoves });\r\n                                    })\r\n                                    .catch(console.log);\r\n                            }\r\n                        })\r\n                        .catch(console.log);\r\n                })\r\n                .catch(console.log);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const selectedPokemon = this.state.selectedPokemon;\r\n        // Sort pokemons by names\r\n        const pokemons = this.state.pokemons.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            else return -1;\r\n        })\r\n        // Sort pokemon moves by names\r\n        const moves = this.state.moves.sort((a, b) => {\r\n            if (a.move.name > b.move.name) return 1;\r\n            else return -1;\r\n        });\r\n        // Pokemon types\r\n        let types = [];\r\n        if (selectedPokemon) {\r\n            types = selectedPokemon.types.sort((a, b) => {\r\n                return a.slot - b.slot;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"box\">\r\n                    <div className=\"row\">\r\n                        <div onMouseEnter={this.handleMouseHoverIn}\r\n                            onMouseLeave={this.handleMouseHoverOut}\r\n                            className=\"col-5\">\r\n                            <PokemonImage name={(selectedPokemon) ? (selectedPokemon.name) : \"\"} />\r\n                            <select onChange={this.handleChange} className=\"form-control species-name\">\r\n                                <option key=\"\" value=\"\"></option>\r\n                                {pokemons.map((pokemon) =>\r\n                                    <option key={pokemon.name} value={pokemon.name}>{titleize(pokemon.name)}</option>\r\n                                )}\r\n                            </select>\r\n                            <div className=\"types\">\r\n                                {types.map((type) =>\r\n                                    <Type key={type.type.name} type={type.type.name} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-7\">\r\n                            <div className=\"moves\">\r\n                                <Move moves={moves} moveTypesCallback={this.moveTypesCallback} />\r\n                                <Move moves={moves} moveTypesCallback={this.moveTypesCallback} />\r\n                                <Move moves={moves} moveTypesCallback={this.moveTypesCallback} />\r\n                                <Move moves={moves} moveTypesCallback={this.moveTypesCallback} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    selectedPokemon &&\r\n                    <Pokemoninfo isVisible={this.state.isHovering} pokemon={selectedPokemon} types={types}/>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Stat from './stat/Stat';\r\nimport './Stats.css';\r\n\r\nexport default class Stats extends Component {\r\n    render() {\r\n        const values = this.props.values;\r\n        const nbPokemon = this.props.selectedPokemonNumber;\r\n        return (\r\n            <div className=\"col-lg-3 col-md-4 col-12 right-border\">\r\n                <h3>STATS AVERAGE</h3>\r\n                <div>\r\n                    {Object.keys(values).map(key =>\r\n                        <Stat key={key} name={key} value={(nbPokemon === 0) ? (0) : (values[key] / nbPokemon)} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Type from '../types/type/Type';\r\nimport './Types.css';\r\nimport * as TypeRelations from './type_relations';\r\n\r\nexport default class Types extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lastMovesTypes: []\r\n        }\r\n    }\r\n\r\n    getInitialWeaknesses() {\r\n        let weaknesses = {};\r\n        TypeRelations.typesList.forEach(element => {\r\n            weaknesses[element] = 0;\r\n        });\r\n        return weaknesses;\r\n    }\r\n\r\n    getInitialStrengths() {\r\n        let strengths = {};\r\n        TypeRelations.typesList.forEach(element => {\r\n            strengths[element] = 0;\r\n        });\r\n        return strengths;\r\n    }\r\n\r\n    calcWeaknesses() {\r\n        let weaknesses = this.getInitialWeaknesses();\r\n        this.props.pokemonsTypes.forEach(pokemonTypes => {\r\n            let firstTypeWeaknesses = (pokemonTypes[0])?(TypeRelations.typesWeaknesses[pokemonTypes[0]]):([]);\r\n            let secondTypeWeaknesses = (pokemonTypes[1])?(TypeRelations.typesWeaknesses[pokemonTypes[1]]):([]);\r\n            let firstTypeResists = (pokemonTypes[0])?(TypeRelations.typesResists[pokemonTypes[0]]):([]);\r\n            let secondTypeResists = (pokemonTypes[1])?(TypeRelations.typesResists[pokemonTypes[1]]):([]);\r\n            firstTypeWeaknesses = firstTypeWeaknesses.filter((weakness) => !secondTypeResists.includes(weakness));\r\n            secondTypeWeaknesses = secondTypeWeaknesses.filter((weakness) => !firstTypeResists.includes(weakness));\r\n            let pokeWeaknesses = new Set([...firstTypeWeaknesses, ...secondTypeWeaknesses]);\r\n            pokeWeaknesses.forEach(type => weaknesses[type]++);\r\n        })\r\n        return weaknesses;\r\n    }\r\n\r\n    calcStrengths() {\r\n        let strengths = this.getInitialStrengths();\r\n        let alreadyDoneTypes = [];\r\n        this.props.movesTypes.forEach(pokemonMoveTypes => {\r\n            alreadyDoneTypes = [];\r\n            pokemonMoveTypes.forEach(type => {\r\n                let strengthsOfType = TypeRelations.typesStrengths[type];\r\n                strengthsOfType.forEach(strength => {\r\n                    if (!alreadyDoneTypes.includes(strength)) {\r\n                        strengths[strength]++;\r\n                        alreadyDoneTypes.push(strength);\r\n                    }\r\n                })\r\n            })\r\n        });\r\n        return strengths;\r\n    }\r\n\r\n    render() {\r\n        let weaknesses = this.calcWeaknesses();\r\n        let strengths = this.calcStrengths();\r\n\r\n        return (\r\n            <div className=\"col-lg-9 col-md-8 col-12 type-table-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col type-table\">\r\n                        <h3>STRENGTHS</h3>\r\n                        <div className=\"type-list\">\r\n                            {Object.keys(strengths).map((type) =>\r\n                                <div key={type} className=\"typecont\">\r\n                                    <Type type={type} />\r\n                                    <span className='number-type'>{strengths[type]}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col type-table\">\r\n                        <h3>WEAKNESSES</h3>\r\n                        <div className=\"type-list\">\r\n                            {Object.keys(weaknesses).map((type) =>\r\n                                <div key={type} className=\"typecont\">\r\n                                    <Type type={type} />\r\n                                    <span className='number-type'>{weaknesses[type]}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Pokemon from './pokemon/Pokemon';\r\nimport Stats from './stats/Stats';\r\nimport './AppContainer.css';\r\nimport Types from './types/Types';\r\n\r\nexport default class AppContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movesTypes: [],\r\n            pokemonsTypes: [],\r\n            selectedPokemonNumber: 0,\r\n            values: {\r\n                'HP': 0,\r\n                'ATK': 0,\r\n                'DEF': 0,\r\n                'SPA': 0,\r\n                'SPD': 0,\r\n                'SPE': 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    moveTypesCallback = (num, dataFromChild) => {\r\n        let newTypes = this.state.movesTypes;\r\n        newTypes[num] = dataFromChild;\r\n        this.setState({ movesTypes: newTypes });\r\n    }\r\n\r\n    pokemonTypesCallback = (num, dataFromChild) => {\r\n        let newTypes = this.state.pokemonsTypes;\r\n        newTypes[num] = dataFromChild;\r\n        this.setState({ pokemonsTypes: newTypes });\r\n    }\r\n\r\n    statsCallback = (dataFromChild) => {\r\n        // dataFromChild.addition will be -1 if we removed a pokemon, else 1\r\n        let newSelectedPokemonNb;\r\n        let newValues = this.state.values;\r\n        Object.keys(dataFromChild).forEach(key => {\r\n            if (key === 'addition')\r\n                newSelectedPokemonNb = this.state.selectedPokemonNumber + dataFromChild.addition\r\n            else\r\n                newValues[key] += dataFromChild[key];\r\n        });\r\n        this.setState({\r\n            values: newValues,\r\n            selectedPokemonNumber: newSelectedPokemonNb\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const selectedPokemonNumber = this.state.selectedPokemonNumber;\r\n        const values = this.state.values;\r\n        const movesTypes = this.state.movesTypes;\r\n        const pokemonsTypes = this.state.pokemonsTypes;\r\n        return (\r\n            <div className=\"container-fluid app\">\r\n                <div className=\"row\">\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={0} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={1} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={2} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={3} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={4} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                    <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                        <Pokemon statsCallback={this.statsCallback} num={5} moveTypesCallback={this.moveTypesCallback} pokemonTypesCallback={this.pokemonTypesCallback} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Stats selectedPokemonNumber={selectedPokemonNumber} values={values} />\r\n                    <Types movesTypes={movesTypes} pokemonsTypes={pokemonsTypes} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n            <div className=\"container\">\r\n                <span className=\"navbar-brand\">Pokémon Team Planner</span>\r\n                <a href=\"https://github.com/Kairozen/pokemon-team-planner\">\r\n                    <img alt=\"GitHub\" className=\"icon invert\" src=\"./assets/github.svg\" />\r\n                </a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import React from 'react';\nimport AppContainer from './components/AppContainer'\nimport Header from './components/header/Header'\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <AppContainer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}