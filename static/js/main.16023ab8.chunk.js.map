{"version":3,"sources":["components/pokemon/image/Image.js","components/types/type/Type.js","components/params.js","components/pokemon/move/moveinfo/Moveinfo.js","components/pokemon/move/Move.js","components/stats/stat/Stat.js","components/types/type_relations.js","components/pokemon/pokemoninfo/Pokemoninfo.js","components/pokemon/Pokemon.js","components/stats/Stats.js","components/localSaves/LocalSaves.js","components/types/Types.js","components/AppContainer.js","components/header/Header.js","App.js","serviceWorker.js","index.js"],"names":["PokemonImage","props","pokemonName","name","replace","react_default","a","createElement","alt","className","src","Type","type","toUpperCase","API","Moveinfo","moveinfoClass","isVisible","damageClassImage","move","damage_class","effect","effect_entries","effect_chance","titleize","style","float","Type_Type","power","accuracy","Move","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseHoverIn","bind","assertThisInitialized","handleMouseHoverOut","handleChange","moveSelectRef","React","createRef","state","isHovering","selectedMove","loadMoveInChild","loadMove","num","moveToLoad","current","value","moveChange","prevProps","moves","length","setState","oldType","newType","old","new","_this2","moveTypesCallback","moveTypesToSendToParent","selectedMoveCallback","fetch","then","res","json","data","catch","console","log","event","persist","target","setAttribute","setTimeout","removeAttribute","typeClass","Fragment","ref","onMouseEnter","onMouseLeave","onChange","key","map","Moveinfo_Moveinfo","Component","RoundAndFix","n","d","m","Math","pow","round","Stat","statNumber","stat_value","width","backgroundColor","role","title","typesList","typesStrengths","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","typesWeaknesses","typesResists","typesResistsWithoutImmunities","typesImmunities","calcWeaknessesAndResists","types","weaknessesAndResists","weaknesses","TypeRelations","forEach","element","getInitialWeaknessesAndResists","firstTypeWeaknesses","secondTypeWeaknesses","firstTypeResists","secondTypeResists","firstTypeImmunities","secondTypeImmunities","pokeWeaknesses","concat","pokeResists","result","doubleWeaknesses","neutral","resists","doubleResists","immunities","keys","push","render","rawStats","pokemoninfoClass","stats","HP","pokemon","base_stat","ATK","DEF","SPA","SPD","SPE","species","Stat_Stat","Pokemon","moveTypes","newMoveTypes","selectedMovesTypes","filter","includes","newSelectedMoves","selectedMoves","pokemonCallback","pokemonToSendToParent","pokemonSelectRef","loadMoveFunctions","pokemons","selectedPokemon","loadedMoves","pokemonTypes","results","pokemonToLoad","pokemonChange","childFunction","adding","addition","_this3","statsCallback","statsToSendToParent","pokemonTypesCallback","tmpPokemon","finalMoves","evolves_from_species","index","self","findIndex","i","sort","b","slot","Move_Move","acceptLoadInChild","Pokemoninfo_render","Stats","values","nbPokemon","selectedPokemonNumber","LocalSaves","savedTeamsKeys","localStorage","tmp","e","removeItem","dataString","getItem","exportFileName","dataUri","encodeURIComponent","linkElement","document","click","savedTeams","Modal","isOpen","show","toggle","ModalHeader","ModalBody","onClick","exportJsonToFile","loadTeamCallback","deleteSavedTeam","Types","lastMovesTypes","strengths","getInitialWeaknesses","pokemonsTypes","weakness","Set","toConsumableArray","getInitialStrengths","alreadyDoneTypes","movesTypes","pokemonMoveTypes","strength","calcWeaknesses","calcStrengths","AppContainer","toggleModal","isModalOpened","dataFromChild","newTypes","team","JSON","parse","loadedPokemons","ToastsStore","info","newPokemons","newSelectedPokemonNb","newstatValues","statValues","saveToLocalStorage","importTeam","teamNameInput","teamName","error","setItem","stringify","success","files","file","item","reader","FileReader","onload","readAsText","placeholder","lib","position","ToastsContainerPosition","TOP_CENTER","store","LocalSaves_LocalSaves","Pokemon_Pokemon","Stats_Stats","Types_Types","Header","href","App","Header_Header","AppContainer_AppContainer","Boolean","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16023ab8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Image.css'\r\n\r\nexport default function PokemonImage(props) {\r\n    let pokemonName = props.name.replace(/-/g,'');\r\n    if(pokemonName === \"\")\r\n        return <img alt={pokemonName} className=\"pokemon-image\" src='./assets/sprites/missingno.gif'/>\r\n    else\r\n        return <img alt={pokemonName} className=\"pokemon-image\" src={'./assets/sprites/' + pokemonName + '.gif'}/>\r\n}","import React from 'react';\r\nimport './Type.css';\r\n\r\nexport default function Type(props) {\r\n    return (\r\n        <div className=\"type\">\r\n            <div className={props.type}>{props.type.toUpperCase()}</div>\r\n        </div>\r\n    );\r\n}","export const API = \"https://pokeapi.co/api/v2/\";","import React from 'react';\r\nimport './Moveinfo.css';\r\nimport Type from '../../../types/type/Type';\r\nimport titleize from 'titleize';\r\nexport default function Moveinfo(props) {\r\n    const moveinfoClass = (props.isVisible) ? ('moveinfo-visible') : ('moveinfo-hidden');\r\n    const damageClassImage = './assets/' + props.move.damage_class.name + '.png';\r\n    let effect = props.move.effect_entries[0].effect.replace(\"$effect_chance\", props.move.effect_chance);\r\n\r\n    return (\r\n        <div className={\"moveinfo-container \" + moveinfoClass}>\r\n            <h6>\r\n                {titleize(props.move.name)}\r\n                <div style={{ float: 'right' }}>\r\n                    <Type type={props.move.type.name} />\r\n                </div>\r\n            </h6>\r\n            <div className=\"row\">\r\n                <div className=\"moveinfo-data col-5\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th><img alt={props.move.damage_class.name} src={damageClassImage} /></th>\r\n                                <th></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Power</th>\r\n                                <th className='center'>{(props.move.power) ? (props.move.power) : ('--')}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Accuracy</th>\r\n                                <th className='center'>{(props.move.accuracy) ? (props.move.accuracy) : ('--')}</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"moveinfo-data col-7\">\r\n                    <p>\r\n                        {effect}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport titleize from 'titleize';\r\nimport './Move.css';\r\nimport { API } from '../../params'\r\nimport Moveinfo from './moveinfo/Moveinfo';\r\n\r\nexport default class Move extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleMouseHoverIn = this.handleMouseHoverIn.bind(this);\r\n        this.handleMouseHoverOut = this.handleMouseHoverOut.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.moveSelectRef = React.createRef();\r\n        this.state = {\r\n            isHovering: false,\r\n            selectedMove: null\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.loadMoveInChild(this.loadMove.bind(this), this.props.num);\r\n    }\r\n\r\n    loadMove() {\r\n        if(this.props.moveToLoad) {\r\n            this.moveSelectRef.current.value = this.props.moveToLoad;\r\n            this.moveChange(this.props.moveToLoad);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let moveToLoad = this.props.moveToLoad;\r\n        if(prevProps.moveToLoad && moveToLoad && (prevProps.moveToLoad === moveToLoad))\r\n            return;\r\n        if(prevProps.moves.length !== 0 && this.props.moves.length === 0) {\r\n            this.setState({selectedMove:null});\r\n        }\r\n    }\r\n\r\n    handleMouseHoverOut() {\r\n        this.setState({ isHovering: false })\r\n    }\r\n\r\n    handleMouseHoverIn() {\r\n        this.setState({ isHovering: true })\r\n    }\r\n\r\n    // Returns the object to send to the parent for changing attack type\r\n    moveTypesToSendToParent(oldType, newType) {\r\n        let dataFromChild = {\r\n            old: oldType,\r\n            new: newType\r\n        }\r\n        return dataFromChild;\r\n    }\r\n\r\n    moveChange(name) {\r\n        let oldType = null;\r\n        let newType = null;\r\n        // Remove types from previous move in parent component\r\n        if (this.state.selectedMove && this.state.selectedMove.damage_class.name !== \"status\") {\r\n            oldType = this.state.selectedMove.type.name;\r\n        }\r\n        if (name === \"\") {\r\n            this.setState({ isHovering: false, selectedMove: null });\r\n            this.props.moveTypesCallback(this.moveTypesToSendToParent(oldType, newType));\r\n            this.props.selectedMoveCallback(this.props.num, null);\r\n        }\r\n        else {\r\n            // Fetch data of the move\r\n            const API_ROUTE = \"move/\" + name;\r\n            fetch(API + API_ROUTE)\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    this.setState({ isHovering: false, selectedMove: data });\r\n                    if (data.damage_class.name !== \"status\") {\r\n                        newType = data.type.name;\r\n                    }\r\n                    this.props.moveTypesCallback(this.moveTypesToSendToParent(oldType, newType));\r\n                    this.props.selectedMoveCallback(this.props.num, data.name);\r\n                })\r\n                .catch(console.log);\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Prevent from spamming API calls\r\n        event.persist();\r\n        event.target.setAttribute('disabled', 'disabled');\r\n        setTimeout(() => {\r\n            event.target.removeAttribute('disabled');\r\n        }, 500);\r\n        this.moveChange(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        const moves = this.props.moves;\r\n        const selectedMove = this.state.selectedMove;\r\n        const typeClass = (selectedMove) ? (\"select-\" + selectedMove.type.name) : (\"select-no-type\");\r\n        return (\r\n            <React.Fragment>\r\n                <select ref={this.moveSelectRef} onMouseEnter={this.handleMouseHoverIn}\r\n                    onMouseLeave={this.handleMouseHoverOut}\r\n                    onChange={this.handleChange} className={\"form-control move \" + typeClass}>\r\n                    <option className=\"white\" key=\"\" value=\"\"></option>\r\n                    {moves.map((move) =>\r\n                        <option className=\"white\" key={move.move.name} value={move.move.name}>{titleize(move.move.name)}</option>\r\n                    )}\r\n                </select>\r\n                {\r\n                    selectedMove &&\r\n                    <Moveinfo isVisible={this.state.isHovering} move={selectedMove} />\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Stat.css';\r\n\r\n/**\r\n * Returns the rgb() string for the color that should be used for the progressbar.\r\n * @param statNumber The number corresponding to the stat for which you want the color.\r\n */\r\nfunction getColorString(statNumber) {\r\n    return 'rgb(' + ((255 - statNumber - 50 < 0) ? (0) : (255 - statNumber - 50)) + ',' + (((statNumber + 50) > 255) ? (255) : (statNumber + 50)) + ',0)';\r\n}\r\n\r\nfunction RoundAndFix(n, d) {\r\n    var m = Math.pow(10, d);\r\n    return Math.round(n * m) / m;\r\n}\r\n\r\nexport default function Stat(props) {\r\n    let stat_value = props.value;\r\n    let stat_percentage = ((stat_value / 255) * 100);\r\n    let style = {\r\n        width: stat_percentage + '%',\r\n        backgroundColor: getColorString(stat_value)\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"progress col-10\">\r\n                    <span className=\"stat-name\">{props.name}</span>\r\n                    <div className=\"progress-bar\"\r\n                        role=\"progressbar\"\r\n                        title={props.name + ' : ' + RoundAndFix(props.value, 1)}\r\n                        style={style}>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-2 stat-value\">{RoundAndFix(props.value, 1)}</div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","export const typesList = ['normal','fighting','flying','poison','ground','rock','bug','ghost','steel','fire','water','grass','electric','psychic','ice','dragon','dark','fairy'];\r\n\r\nexport const typesStrengths = {\r\n    'normal':[],\r\n    'fighting':['steel','rock','normal','ice','dark'],\r\n    'flying':['grass','fighting','bug'],\r\n    'poison':['grass','fairy'],\r\n    'ground':['rock','steel','fire','electric','poison'],\r\n    'rock':['fire','flying','bug','ice'],\r\n    'bug':['grass','psychic','dark'],\r\n    'ghost':['ghost','psychic'],\r\n    'steel':['fairy','rock','ice'],\r\n    'fire':['grass','bug','ice','steel'],\r\n    'water':['fire','ground','rock'],\r\n    'grass':['water','rock','ground'],\r\n    'electric':['water','flying'],\r\n    'psychic':['poison','fighting'],\r\n    'ice':['grass','ground','flying','dragon'],\r\n    'dragon':['dragon'],\r\n    'dark':['ghost','psychic'],\r\n    'fairy':['fighting','dragon','dark']\r\n};\r\n\r\nexport const typesWeaknesses = {\r\n    'normal':['fighting'],\r\n    'fighting':['fairy','psychic','flying'],\r\n    'flying':['ice','electric','rock'],\r\n    'poison':['ground','psychic'],\r\n    'ground':['water','grass','ice'],\r\n    'rock':['water','ground','fighting','steel','grass'],\r\n    'bug':['fire','rock','flying'],\r\n    'ghost':['ghost','dark'],\r\n    'steel':['fire','fighting','ground'],\r\n    'fire':['water','ground','rock'],\r\n    'water':['electric','grass'],\r\n    'grass':['fire','bug','flying','ice','poison'],\r\n    'electric':['ground'],\r\n    'psychic':['dark','ghost','bug'],\r\n    'ice':['fighting','fire','steel','rock'],\r\n    'dragon':['dragon','fairy'],\r\n    'dark':['bug','fighting','fairy'],\r\n    'fairy':['steel','poison']\r\n};\r\n\r\nexport const typesResists = {\r\n    'normal':['ghost'],\r\n    'fighting':['bug','dark','rock'],\r\n    'flying':['grass','fighting','bug','ground'],\r\n    'poison':['poison','fighting','fairy','bug','grass'],\r\n    'ground':['rock','electric','poison'],\r\n    'rock':['fire','normal','poison','flying'],\r\n    'bug':['fighting','grass','ground'],\r\n    'ghost':['normal','fighting','poison','bug'],\r\n    'steel':['steel','dragon','fairy','ice','bug','normal','grass','poison','psychic','rock','flying'],\r\n    'fire':['fire','grass','bug','steel','fairy','ice'],\r\n    'water':['water','ice','steel','fire'],\r\n    'grass':['grass','ground','water','electric'],\r\n    'electric':['electric','flying','steel'],\r\n    'psychic':['psychic','fighting'],\r\n    'ice':['ice'],\r\n    'dragon':['water','electric','fire','grass'],\r\n    'dark':['ghost','dark','psychic'],\r\n    'fairy':['fighting','dragon','bug']\r\n};\r\n\r\nexport const typesResistsWithoutImmunities = {\r\n    'normal':[],\r\n    'fighting':['bug','dark','rock'],\r\n    'flying':['grass','fighting','bug'],\r\n    'poison':['poison','fighting','fairy','bug','grass'],\r\n    'ground':['rock','poison'],\r\n    'rock':['fire','normal','poison','flying'],\r\n    'bug':['fighting','grass','ground'],\r\n    'ghost':['poison','bug'],\r\n    'steel':['steel','dragon','fairy','ice','bug','normal','grass','psychic','rock','flying'],\r\n    'fire':['fire','grass','bug','steel','fairy','ice'],\r\n    'water':['water','ice','steel','fire'],\r\n    'grass':['grass','ground','water','electric'],\r\n    'electric':['electric','flying','steel'],\r\n    'psychic':['psychic','fighting'],\r\n    'ice':['ice'],\r\n    'dragon':['water','electric','fire','grass'],\r\n    'dark':['ghost','dark'],\r\n    'fairy':['fighting','bug']\r\n};\r\n\r\nexport const typesImmunities = {\r\n    'normal':['ghost'],\r\n    'fighting':[],\r\n    'flying':['ground'],\r\n    'poison':[],\r\n    'ground':['electric'],\r\n    'rock':[],\r\n    'bug':[],\r\n    'ghost':['normal','fighting'],\r\n    'steel':['poison'],\r\n    'fire':[],\r\n    'water':[],\r\n    'grass':[],\r\n    'electric':[],\r\n    'psychic':[],\r\n    'ice':[],\r\n    'dragon':[],\r\n    'dark':['psychic'],\r\n    'fairy':['dragon']\r\n};","import React from 'react';\r\nimport './Pokemoninfo.css';\r\nimport Type from '../../types/type/Type';\r\nimport titleize from 'titleize';\r\nimport Stat from '../../stats/stat/Stat';\r\nimport * as TypeRelations from '../../types/type_relations';\r\n\r\nfunction getInitialWeaknessesAndResists() {\r\n    let weaknesses = {};\r\n    TypeRelations.typesList.forEach(element => {\r\n        weaknesses[element] = 0;\r\n    });\r\n    return weaknesses;\r\n}\r\n\r\nfunction calcWeaknessesAndResists(types) {\r\n    let weaknessesAndResists = getInitialWeaknessesAndResists();\r\n    let firstTypeWeaknesses = (types[0]) ? (TypeRelations.typesWeaknesses[types[0].type.name]) : ([]);\r\n    let secondTypeWeaknesses = (types[1]) ? (TypeRelations.typesWeaknesses[types[1].type.name]) : ([]);\r\n    let firstTypeResists = (types[0]) ? (TypeRelations.typesResistsWithoutImmunities[types[0].type.name]) : ([]);\r\n    let secondTypeResists = (types[1]) ? (TypeRelations.typesResistsWithoutImmunities[types[1].type.name]) : ([]);\r\n    let firstTypeImmunities = (types[1]) ? (TypeRelations.typesImmunities[types[0].type.name]) : ([]);\r\n    let secondTypeImmunities = (types[1]) ? (TypeRelations.typesImmunities[types[1].type.name]) : ([]);\r\n    let pokeWeaknesses = firstTypeWeaknesses.concat(secondTypeWeaknesses);\r\n    let pokeResists = firstTypeResists.concat(secondTypeResists);\r\n    let pokeImmunities = firstTypeImmunities.concat(secondTypeImmunities);\r\n    pokeImmunities.forEach(type => weaknessesAndResists[type] = 'immune');\r\n    pokeWeaknesses.forEach(type => {\r\n        if (weaknessesAndResists[type] !== 'immune')\r\n            weaknessesAndResists[type]++;\r\n    });\r\n    pokeResists.forEach(type => {\r\n        if (weaknessesAndResists[type] !== 'immune')\r\n            weaknessesAndResists[type]--;\r\n    });\r\n    let result = {\r\n        doubleWeaknesses: [],\r\n        weaknesses: [],\r\n        neutral: [],\r\n        resists: [],\r\n        doubleResists: [],\r\n        immunities: []\r\n    }\r\n    Object.keys(weaknessesAndResists).forEach((type) => {\r\n        if (weaknessesAndResists[type] === 'immune')\r\n            result.immunities.push(type);\r\n        else if (weaknessesAndResists[type] === 2)\r\n            result.doubleWeaknesses.push(type);\r\n        else if (weaknessesAndResists[type] === 1)\r\n            result.weaknesses.push(type);\r\n        else if (weaknessesAndResists[type] === -1)\r\n            result.resists.push(type);\r\n        else if (weaknessesAndResists[type] === -2)\r\n            result.doubleResists.push(type);\r\n        else\r\n            result.neutral.push(type);\r\n    });\r\n    return result;\r\n}\r\n\r\nfunction getStats(rawStats) {\r\n    let stats = {\r\n        'HP': rawStats[5].base_stat,\r\n        'ATK': rawStats[4].base_stat,\r\n        'DEF': rawStats[3].base_stat,\r\n        'SPA': rawStats[2].base_stat,\r\n        'SPD': rawStats[1].base_stat,\r\n        'SPE': rawStats[0].base_stat\r\n    };\r\n    return stats;\r\n}\r\n\r\nexport default function render(props) {\r\n    const pokemoninfoClass = (props.isVisible) ? ('pokemoninfo-visible') : ('pokemoninfo-hidden');\r\n    const types = props.types;\r\n    const stats = getStats(props.pokemon.stats);\r\n    const weaknessesAndResists = calcWeaknessesAndResists(types);\r\n    return (\r\n        <div className={\"pokemoninfo-container \" + pokemoninfoClass}>\r\n            <h6>\r\n                {titleize(props.pokemon.species.name)}\r\n                <div style={{ float: 'right' }}>\r\n                    {\r\n                        types.map((type) =>\r\n                            <Type key={type.type.name} type={type.type.name} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </h6>\r\n            <div className=\"row\">\r\n                <div className=\"pokemoninfo-data col-xl-5 col-md-12\">\r\n                    {\r\n                        Object.keys(stats).map((key) =>\r\n                            <Stat key={key} name={key} value={stats[key]} />\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"pokemoninfo-data pokemoninfo-type-relations col-xl-7 col-md-12\">\r\n                    {\r\n                        weaknessesAndResists.doubleResists.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Strongly resists</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.doubleResists.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        weaknessesAndResists.resists.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Resists</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.resists.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        /* weaknessesAndResists.neutral.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Neutral</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.neutral.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment> */\r\n                    }\r\n                    {\r\n                        weaknessesAndResists.weaknesses.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Weak to</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.weaknesses.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        weaknessesAndResists.doubleWeaknesses.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Very weak to</h5>\r\n                            <div>\r\n                                    {weaknessesAndResists.doubleWeaknesses.map(type => \r\n                                        <Type key={type} type={type} />\r\n                                    )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        weaknessesAndResists.immunities.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h5>Immune to</h5>\r\n                            <div>\r\n                                {weaknessesAndResists.immunities.map(type => \r\n                                    <Type key={type} type={type} />\r\n                                )}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport PokemonImage from './image/Image';\r\nimport Type from '../types/type/Type';\r\nimport Move from './move/Move';\r\nimport Pokemoninfo from './pokemoninfo/Pokemoninfo';\r\nimport { API } from '../params';\r\nimport './Pokemon.css';\r\nimport titleize from 'titleize';\r\n\r\nexport default class Pokemon extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.handleMouseHoverOut = this.handleMouseHoverOut.bind(this);\r\n        this.handleMouseHoverIn = this.handleMouseHoverIn.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.pokemonSelectRef = React.createRef();\r\n        this.loadMoveFunctions = [];\r\n        this.state = {\r\n            pokemons: [],\r\n            isHovering: false,\r\n            selectedPokemon: null,\r\n            moves: [],\r\n            loadedMoves: [],\r\n            selectedMoves: [],\r\n            selectedMovesTypes: [],\r\n            pokemonTypes: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const API_ROUTE = \"pokemon?limit=964\";\r\n        fetch(API + API_ROUTE)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ pokemons: data.results })\r\n            })\r\n            .catch(console.log);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let pokemonToLoad = this.props.pokemonToLoad;\r\n        if (prevProps.pokemonToLoad && pokemonToLoad && (prevProps.pokemonToLoad.name === pokemonToLoad.name))  {\r\n            return;\r\n        }\r\n        /* if (!pokemonToLoad && this.state.selectedPokemon) {\r\n            this.pokemonSelectRef.current.value = \"\";\r\n            this.pokemonChange(\"\");\r\n        } */\r\n        if (pokemonToLoad && (!this.state.selectedPokemon || this.state.selectedPokemon.name !== pokemonToLoad.name)) {\r\n            this.pokemonSelectRef.current.value = pokemonToLoad.name;\r\n            this.pokemonChange(pokemonToLoad.name);\r\n            this.setState({ loadedMoves: pokemonToLoad.moves });\r\n        }\r\n    }\r\n\r\n    // Display pokemon informations when hovering in\r\n    handleMouseHoverIn() {\r\n        this.setState({ isHovering: true })\r\n    }\r\n    // Remove pokemon information when hovering out\r\n    handleMouseHoverOut() {\r\n        this.setState({ isHovering: false })\r\n    }\r\n\r\n    // Callback for children so they send the types of the moves\r\n    moveTypesCallback = (moveTypes) => {\r\n        let newMoveTypes = this.state.selectedMovesTypes;\r\n        if (moveTypes.old) {\r\n            newMoveTypes = newMoveTypes.filter((type) => {\r\n                return type !== moveTypes.old;\r\n            });\r\n        }\r\n        if (moveTypes.new && !newMoveTypes.includes(moveTypes.new)) {\r\n            newMoveTypes.push(moveTypes.new);\r\n        }\r\n        this.setState({\r\n            selectedMovesTypes: newMoveTypes\r\n        });\r\n        this.props.moveTypesCallback(this.props.num, newMoveTypes);\r\n    }\r\n\r\n    acceptLoadInChild(childFunction, num) {\r\n        this.loadMoveFunctions[num] = childFunction;\r\n    }\r\n\r\n    selectedMoveCallback = (num, move) => {\r\n        let newSelectedMoves = this.state.selectedMoves;\r\n        if (move) {\r\n            newSelectedMoves[num] = move;\r\n        }\r\n        this.setState({ selectedMoves: newSelectedMoves });\r\n        this.props.pokemonCallback(this.props.num, this.pokemonToSendToParent());\r\n    }\r\n\r\n    // Returns the object to send to the parent for changing stats\r\n    // Adding is -1 if we remove stats, and is 1 if we add stats\r\n    statsToSendToParent(adding) {\r\n        let datafromChild = {\r\n            'addition': 1 * adding,\r\n            'HP': this.state.selectedPokemon.stats[5].base_stat * adding,\r\n            'ATK': this.state.selectedPokemon.stats[4].base_stat * adding,\r\n            'DEF': this.state.selectedPokemon.stats[3].base_stat * adding,\r\n            'SPA': this.state.selectedPokemon.stats[2].base_stat * adding,\r\n            'SPD': this.state.selectedPokemon.stats[1].base_stat * adding,\r\n            'SPE': this.state.selectedPokemon.stats[0].base_stat * adding\r\n        };\r\n        return datafromChild;\r\n    }\r\n\r\n    // Send data of a pokemon and its selected moves to the parent\r\n    pokemonToSendToParent() {\r\n        let pokemon = {};\r\n        let moves = [];\r\n        if (this.state.selectedPokemon) {\r\n            pokemon.name = this.state.selectedPokemon.name;\r\n            this.state.selectedMoves.forEach(move => {\r\n                if (move) {\r\n                    moves.push(move);\r\n                }\r\n            });\r\n            pokemon.moves = moves;\r\n        }\r\n        return pokemon;\r\n    }\r\n\r\n    // This code is fucking disgusting but didn't find another way to do it\r\n    pokemonChange(name) {\r\n        // Remove stats from previous pokemon in parent component\r\n        if (this.state.selectedPokemon)\r\n            this.props.statsCallback(this.statsToSendToParent(-1));\r\n        if (name === \"\") {\r\n            this.setState({\r\n                selectedPokemon: null,\r\n                isHovering: false,\r\n                moves: [],\r\n                selectedMovesTypes: []\r\n            });\r\n            // Send empty pokemon to parent\r\n            this.props.pokemonCallback(this.props.num, null);\r\n            // Reset types to send to parent component\r\n            this.props.pokemonTypesCallback(this.props.num, []);\r\n            // Reset moves to send to parent component\r\n            this.props.moveTypesCallback(this.props.num, []);\r\n        }\r\n        else {\r\n            // Fetch data of 1 pokemon\r\n            const API_ROUTE = \"pokemon/\" + name;\r\n            fetch(API + API_ROUTE)\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        moves: [],\r\n                        selectedPokemon: data,\r\n                        selectedMovesTypes: [],\r\n                        isHovering: false\r\n                    });\r\n                    // Send empty pokemon to parent\r\n                    this.props.pokemonCallback(this.props.num, this.pokemonToSendToParent());\r\n                    // Reset types to send to parent component\r\n                    let types = [];\r\n                    data.types.forEach(type => types.push(type.type.name));\r\n                    this.props.pokemonTypesCallback(this.props.num, types);\r\n                    // Reset moves\r\n                    this.props.moveTypesCallback(this.props.num, []);\r\n                    // Get stats and send to parents\r\n                    this.props.statsCallback(this.statsToSendToParent(1));\r\n                    // Get their evolutionary line to fill moves\r\n                    let tmpPokemon = this.state.selectedPokemon;\r\n                    let finalMoves = tmpPokemon.moves;\r\n                    let species = {};\r\n                    fetch(API + \"pokemon-species/\" + tmpPokemon.species.name)\r\n                        .then(res => res.json())\r\n                        .then((data) => {\r\n                            species = data;\r\n                            if (!species.evolves_from_species) {\r\n                                this.setState({ moves: finalMoves });\r\n                                for(let i = 0; i < this.loadMoveFunctions.length; ++i) {\r\n                                    this.loadMoveFunctions[i]();\r\n                                }\r\n                            }\r\n                            else {\r\n                                fetch(API + \"pokemon/\" + species.evolves_from_species.name)\r\n                                    .then(res => res.json())\r\n                                    .then((data) => {\r\n                                        tmpPokemon = data;\r\n                                        finalMoves = finalMoves\r\n                                            .concat(tmpPokemon.moves)\r\n                                            .filter((move, index, self) =>\r\n                                                index === self.findIndex((m) => (\r\n                                                    m.move.name === move.move.name\r\n                                                ))\r\n                                            )\r\n                                        this.setState({ moves: finalMoves });\r\n                                        for(let i = 0; i < this.loadMoveFunctions.length; ++i) {\r\n                                            this.loadMoveFunctions[i]();\r\n                                        }\r\n                                        //this.loadMoveInChild();\r\n                                    })\r\n                                    .catch(console.log);\r\n                            }\r\n                        })\r\n                        .catch(console.log);\r\n                })\r\n                .catch(console.log);\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Prevent from spamming API calls\r\n        event.persist();\r\n        event.target.setAttribute('disabled', 'disabled');\r\n        setTimeout(() => {\r\n            event.target.removeAttribute('disabled');\r\n        }, 500);\r\n        this.pokemonChange(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        const selectedPokemon = this.state.selectedPokemon;\r\n        const loadedMoves = this.state.loadedMoves;\r\n        // Sort pokemons by names\r\n        const pokemons = this.state.pokemons.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            else return -1;\r\n        })\r\n        // Sort pokemon moves by names\r\n        const moves = this.state.moves.sort((a, b) => {\r\n            if (a.move.name > b.move.name) return 1;\r\n            else return -1;\r\n        });\r\n        // Pokemon types\r\n        let types = [];\r\n        if (selectedPokemon) {\r\n            types = selectedPokemon.types.sort((a, b) => {\r\n                return a.slot - b.slot;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"box\">\r\n                    <div className=\"row\">\r\n                        <div onMouseEnter={this.handleMouseHoverIn}\r\n                            onMouseLeave={this.handleMouseHoverOut}\r\n                            className=\"col-5\">\r\n                            <PokemonImage name={(selectedPokemon) ? (selectedPokemon.name) : \"\"} />\r\n                            <select ref={this.pokemonSelectRef} onChange={this.handleChange} className=\"form-control species-name\">\r\n                                <option key=\"\" value=\"\"></option>\r\n                                {pokemons.map((pokemon) =>\r\n                                    <option key={pokemon.name} value={pokemon.name}>{titleize(pokemon.name)}</option>\r\n                                )}\r\n                            </select>\r\n                            <div className=\"types\">\r\n                                {types.map((type) =>\r\n                                    <Type key={type.type.name} type={type.type.name} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-7\">\r\n                            <div className=\"moves\">\r\n                                <Move moves={moves} loadMoveInChild={this.acceptLoadInChild.bind(this)} moveToLoad={loadedMoves[0]} selectedMoveCallback={this.selectedMoveCallback} num={0} moveTypesCallback={this.moveTypesCallback} />\r\n                                <Move moves={moves} loadMoveInChild={this.acceptLoadInChild.bind(this)} moveToLoad={loadedMoves[1]} selectedMoveCallback={this.selectedMoveCallback} num={1} moveTypesCallback={this.moveTypesCallback} />\r\n                                <Move moves={moves} loadMoveInChild={this.acceptLoadInChild.bind(this)} moveToLoad={loadedMoves[2]} selectedMoveCallback={this.selectedMoveCallback} num={2} moveTypesCallback={this.moveTypesCallback} />\r\n                                <Move moves={moves} loadMoveInChild={this.acceptLoadInChild.bind(this)} moveToLoad={loadedMoves[3]} selectedMoveCallback={this.selectedMoveCallback} num={3} moveTypesCallback={this.moveTypesCallback} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    selectedPokemon &&\r\n                    <Pokemoninfo isVisible={this.state.isHovering} pokemon={selectedPokemon} types={types} />\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Stat from './stat/Stat';\r\nimport './Stats.css';\r\n\r\nexport default class Stats extends Component {\r\n    render() {\r\n        const values = this.props.values;\r\n        const nbPokemon = this.props.selectedPokemonNumber;\r\n        return (\r\n            <div className=\"col-lg-3 col-md-4 col-12 right-border\">\r\n                <h3>STATS AVERAGE</h3>\r\n                <div>\r\n                    {Object.keys(values).map(key =>\r\n                        <Stat key={key} name={key} value={(nbPokemon === 0) ? (0) : (values[key] / nbPokemon)} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport './LocalSaves.css';\r\nexport default class LocalSaves extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            savedTeamsKeys: Object.keys(localStorage)\r\n        }\r\n    }\r\n\r\n    deleteSavedTeam(key) {\r\n        let tmp = this.state.savedTeamsKeys;\r\n        tmp.filter(e => e !== key);\r\n        localStorage.removeItem(key);\r\n        this.setState({ savedTeamsKeys: tmp });\r\n    }\r\n\r\n    exportJsonToFile(key) {\r\n        let dataString = localStorage.getItem(key);\r\n        let exportFileName = key + '.json';\r\n        let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataString);\r\n        \r\n        let linkElement = document.createElement('a');\r\n        linkElement.setAttribute('href', dataUri);\r\n        linkElement.setAttribute('download', exportFileName);\r\n        linkElement.click();\r\n    }\r\n\r\n    render() {\r\n        let savedTeams = Object.keys(localStorage);\r\n\r\n        return (\r\n            <Modal isOpen={this.props.show} toggle={this.props.toggle}>\r\n                <ModalHeader toggle={this.props.toggle}>\r\n                    List of saved teams\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {\r\n                        (savedTeams.length === 0) ?\r\n                            (<p>You don't have any saved team.</p>) :\r\n                            (savedTeams.map((key) =>\r\n                                <div key={key} className=\"row team-line\">\r\n                                    <div className=\"col-6 team-name\">\r\n                                        <p>\r\n                                            {key}\r\n                                        </p>\r\n                                    </div>\r\n                                    <button onClick={() => this.exportJsonToFile(key)} className=\"col-2 btn btn-info no-radius\">Export</button>\r\n                                    <button onClick={() => this.props.loadTeamCallback(key)} className=\"col-2 btn btn-dark no-radius\">Load</button>\r\n                                    <button onClick={() => this.deleteSavedTeam(key)} className=\"col-2 btn btn-danger no-radius\">Delete</button>\r\n                                </div>)\r\n                            )\r\n                    }\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Type from '../types/type/Type';\r\nimport './Types.css';\r\nimport * as TypeRelations from './type_relations';\r\n\r\nexport default class Types extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lastMovesTypes: []\r\n        }\r\n    }\r\n\r\n    getInitialWeaknesses() {\r\n        let weaknesses = {};\r\n        TypeRelations.typesList.forEach(element => {\r\n            weaknesses[element] = 0;\r\n        });\r\n        return weaknesses;\r\n    }\r\n\r\n    getInitialStrengths() {\r\n        let strengths = {};\r\n        TypeRelations.typesList.forEach(element => {\r\n            strengths[element] = 0;\r\n        });\r\n        return strengths;\r\n    }\r\n\r\n    calcWeaknesses() {\r\n        let weaknesses = this.getInitialWeaknesses();\r\n        this.props.pokemonsTypes.forEach(pokemonTypes => {\r\n            let firstTypeWeaknesses = (pokemonTypes[0])?(TypeRelations.typesWeaknesses[pokemonTypes[0]]):([]);\r\n            let secondTypeWeaknesses = (pokemonTypes[1])?(TypeRelations.typesWeaknesses[pokemonTypes[1]]):([]);\r\n            let firstTypeResists = (pokemonTypes[0])?(TypeRelations.typesResists[pokemonTypes[0]]):([]);\r\n            let secondTypeResists = (pokemonTypes[1])?(TypeRelations.typesResists[pokemonTypes[1]]):([]);\r\n            firstTypeWeaknesses = firstTypeWeaknesses.filter((weakness) => !secondTypeResists.includes(weakness));\r\n            secondTypeWeaknesses = secondTypeWeaknesses.filter((weakness) => !firstTypeResists.includes(weakness));\r\n            let pokeWeaknesses = new Set([...firstTypeWeaknesses, ...secondTypeWeaknesses]);\r\n            pokeWeaknesses.forEach(type => weaknesses[type]++);\r\n        })\r\n        return weaknesses;\r\n    }\r\n\r\n    calcStrengths() {\r\n        let strengths = this.getInitialStrengths();\r\n        let alreadyDoneTypes = [];\r\n        this.props.movesTypes.forEach(pokemonMoveTypes => {\r\n            alreadyDoneTypes = [];\r\n            pokemonMoveTypes.forEach(type => {\r\n                let strengthsOfType = TypeRelations.typesStrengths[type];\r\n                strengthsOfType.forEach(strength => {\r\n                    if (!alreadyDoneTypes.includes(strength)) {\r\n                        strengths[strength]++;\r\n                        alreadyDoneTypes.push(strength);\r\n                    }\r\n                })\r\n            })\r\n        });\r\n        return strengths;\r\n    }\r\n\r\n    render() {\r\n        let weaknesses = this.calcWeaknesses();\r\n        let strengths = this.calcStrengths();\r\n\r\n        return (\r\n            <div className=\"col-lg-9 col-md-8 col-12 type-table-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col type-table\">\r\n                        <h3>STRENGTHS</h3>\r\n                        <div className=\"type-list\">\r\n                            {Object.keys(strengths).map((type) =>\r\n                                <div key={type} className=\"typecont\">\r\n                                    <Type type={type} />\r\n                                    <span className='number-type'>{strengths[type]}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col type-table\">\r\n                        <h3>WEAKNESSES</h3>\r\n                        <div className=\"type-list\">\r\n                            {Object.keys(weaknesses).map((type) =>\r\n                                <div key={type} className=\"typecont\">\r\n                                    <Type type={type} />\r\n                                    <span className='number-type'>{weaknesses[type]}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Pokemon from './pokemon/Pokemon';\r\nimport Stats from './stats/Stats';\r\nimport './AppContainer.css';\r\nimport LocalSaves from './localSaves/LocalSaves';\r\nimport Types from './types/Types';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\n\r\nexport default class AppContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.saveToLocalStorage = this.saveToLocalStorage.bind(this);\r\n        this.importTeam = this.importTeam.bind(this);\r\n        this.teamNameInput = React.createRef();\r\n        this.state = {\r\n            movesTypes: [],\r\n            pokemonsTypes: [],\r\n            pokemons: [],\r\n            loadedPokemons: [],\r\n            isModalOpened: false,\r\n            selectedPokemonNumber: 0,\r\n            statValues: {\r\n                'HP': 0,\r\n                'ATK': 0,\r\n                'DEF': 0,\r\n                'SPA': 0,\r\n                'SPD': 0,\r\n                'SPE': 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpened: !this.state.isModalOpened });\r\n    }\r\n\r\n    moveTypesCallback = (num, dataFromChild) => {\r\n        let newTypes = this.state.movesTypes;\r\n        newTypes[num] = dataFromChild;\r\n        this.setState({ movesTypes: newTypes });\r\n    }\r\n\r\n    loadTeamCallback = (key) => {\r\n        let team = JSON.parse(localStorage.getItem(key));\r\n        this.setState({loadedPokemons: team});\r\n        ToastsStore.info(\"Team is loading, it will take some time...\", 5000, \"my-toast\");\r\n    }\r\n\r\n    pokemonTypesCallback = (num, dataFromChild) => {\r\n        let newTypes = this.state.pokemonsTypes;\r\n        newTypes[num] = dataFromChild;\r\n        this.setState({ pokemonsTypes: newTypes });\r\n    }\r\n\r\n    pokemonCallback = (num, pokemon) => {\r\n        let newPokemons = this.state.pokemons;\r\n        newPokemons[num] = pokemon;\r\n        this.setState({ pokemons: newPokemons });\r\n    }\r\n\r\n    statsCallback = (dataFromChild) => {\r\n        // dataFromChild.addition will be -1 if we removed a pokemon, else 1\r\n        let newSelectedPokemonNb;\r\n        let newstatValues = this.state.statValues;\r\n        Object.keys(dataFromChild).forEach(key => {\r\n            if (key === 'addition')\r\n                newSelectedPokemonNb = this.state.selectedPokemonNumber + dataFromChild.addition\r\n            else\r\n                newstatValues[key] += dataFromChild[key];\r\n        });\r\n        this.setState({\r\n            statValues: newstatValues,\r\n            selectedPokemonNumber: newSelectedPokemonNb\r\n        });\r\n    }\r\n\r\n    saveToLocalStorage() {\r\n        let teamName = this.teamNameInput.current.value;\r\n        if(this.state.pokemons.length === 0) {\r\n            ToastsStore.error(\"You can't save an empty team\", 3000, \"my-toast\");\r\n        }\r\n        else if(teamName === \"\" || localStorage.getItem(teamName)) {\r\n            ToastsStore.error(\"Team name is empty or has already been saved\", 3000, \"my-toast\");\r\n        }\r\n        else {\r\n            localStorage.setItem(teamName, JSON.stringify(this.state.pokemons));\r\n            ToastsStore.success(\"Team saved successfully !\", 3000, \"my-toast\");\r\n        }\r\n    }\r\n\r\n    importTeam(event) {\r\n        try {\r\n            let files = event.target.files;\r\n            if(files.length) {\r\n                let file = files.item(0);\r\n                let reader = new FileReader();\r\n                let self = this;\r\n                reader.onload = (event) => {\r\n                    let result = JSON.parse(event.target.result);\r\n                    self.setState({loadedPokemons: result});\r\n                    ToastsStore.info(\"Team is loading, it will take some time...\", 5000, \"my-toast\");\r\n                }\r\n                reader.readAsText(file);\r\n            }\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const selectedPokemonNumber = this.state.selectedPokemonNumber;\r\n        const statValues = this.state.statValues;\r\n        const movesTypes = this.state.movesTypes;\r\n        const pokemonsTypes = this.state.pokemonsTypes;\r\n        const loadedPokemons = this.state.loadedPokemons;\r\n        return (\r\n            <div className=\"lower\">\r\n                <div className=\"row\">\r\n                    <button className=\"col-md col-sm btn no-radius border-black lightgrey-background btn-outline-dark\" onClick={this.toggleModal}>Saved Teams</button>\r\n                    <div className=\"col-md col-sm upload-btn-wrapper btn-outline-dark btn no-radius lightgrey-background\">\r\n                        Import a team\r\n                        <input onChange={this.importTeam} type=\"file\" onClick={this.importTeam}/>\r\n                    </div> \r\n                    <div className=\"col-md-1 hidden-sm-down\"></div>\r\n                    <input type=\"text\" placeholder=\"Team Name\" ref={this.teamNameInput} className=\"col-md col-sm team-name-input no-radius border-black form-control\" />\r\n                    <button onClick={this.saveToLocalStorage} className=\"col-md col-sm btn no-radius lightgrey-background btn-outline-dark\">Save</button>\r\n                    <ToastsContainer position={ToastsContainerPosition.TOP_CENTER} store={ToastsStore} />\r\n                </div>\r\n                <LocalSaves loadTeamCallback={this.loadTeamCallback} show={this.state.isModalOpened} toggle={this.toggleModal} />\r\n                <div className=\"container-fluid lightgrey-background app\">\r\n                    <div className=\"row\">\r\n                        <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                            <Pokemon statsCallback={this.statsCallback} num={0} moveTypesCallback={this.moveTypesCallback}  pokemonToLoad={loadedPokemons[0]} pokemonTypesCallback={this.pokemonTypesCallback} pokemonCallback={this.pokemonCallback} />\r\n                        </div>\r\n                        <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                            <Pokemon statsCallback={this.statsCallback} num={1} moveTypesCallback={this.moveTypesCallback}  pokemonToLoad={loadedPokemons[1]} pokemonTypesCallback={this.pokemonTypesCallback} pokemonCallback={this.pokemonCallback} />\r\n                        </div>\r\n                        <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                            <Pokemon statsCallback={this.statsCallback} num={2} moveTypesCallback={this.moveTypesCallback}  pokemonToLoad={loadedPokemons[2]} pokemonTypesCallback={this.pokemonTypesCallback} pokemonCallback={this.pokemonCallback} />\r\n                        </div>\r\n                        <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                            <Pokemon statsCallback={this.statsCallback} num={3} moveTypesCallback={this.moveTypesCallback}  pokemonToLoad={loadedPokemons[3]} pokemonTypesCallback={this.pokemonTypesCallback} pokemonCallback={this.pokemonCallback} />\r\n                        </div>\r\n                        <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                            <Pokemon statsCallback={this.statsCallback} num={4} moveTypesCallback={this.moveTypesCallback}  pokemonToLoad={loadedPokemons[4]} pokemonTypesCallback={this.pokemonTypesCallback} pokemonCallback={this.pokemonCallback} />\r\n                        </div>\r\n                        <div className=\"pokemon col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                            <Pokemon statsCallback={this.statsCallback} num={5} moveTypesCallback={this.moveTypesCallback}  pokemonToLoad={loadedPokemons[5]} pokemonTypesCallback={this.pokemonTypesCallback} pokemonCallback={this.pokemonCallback} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Stats selectedPokemonNumber={selectedPokemonNumber} values={statValues} />\r\n                        <Types movesTypes={movesTypes} pokemonsTypes={pokemonsTypes} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n            <div className=\"container\">\r\n                <span className=\"navbar-brand\">Pokémon Team Planner</span>\r\n                <a href=\"https://github.com/Kairozen/pokemon-team-planner\">\r\n                    <img alt=\"GitHub\" className=\"icon invert\" src=\"./assets/github.svg\" />\r\n                </a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import React from 'react';\nimport AppContainer from './components/AppContainer'\nimport Header from './components/header/Header'\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <AppContainer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}